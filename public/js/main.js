// Initialize Swiper
const swiper = new Swiper('.swiper', {
    navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
    },
    loop: true,
    spaceBetween: 20,
});

// –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ç–æ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function openImage(src) {
    const modal = document.getElementById("image-modal");
    const modalImg = document.getElementById("modal-image");
    modal.style.display = "flex"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modalImg.src = src; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeImage() {
    const modal = document.getElementById("image-modal");
    modal.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
document.addEventListener('DOMContentLoaded', () => {
    const sections = document.querySelectorAll('.section');

    const observer = new IntersectionObserver(
        (entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                    observer.unobserve(entry.target);
                }
            });
        },
        {
            threshold: 0.2,
        }
    );

    sections.forEach(section => {
        observer.observe(section);
    });
});

document.getElementById("play-music").addEventListener("click", function () {
    const music = document.getElementById("background-music");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—É–∑—ã–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
    if (music.paused) {
        music.play().then(() => {
            console.log("–ú—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!");
        }).catch((err) => {
            console.error("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏:", err);
        });
    }

    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –º—É–∑—ã–∫–∏
    this.style.display = "none";
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤
function initializeFallingDecor() {
    const container = document.querySelector('.falling-decor');
    const symbols = ['‚ú®', '‚ù§Ô∏è', 'üíñ', '‚≠ê']; // –°–∏–º–≤–æ–ª—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const maxDecor = 30; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤

    for (let i = 0; i < maxDecor; i++) {
        const decor = document.createElement('span');
        decor.textContent = symbols[Math.floor(Math.random() * symbols.length)];
        decor.style.left = Math.random() * 100 + 'vw';
        decor.style.animationDuration = Math.random() * 5 + 5 + 's'; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–∞–¥–µ–Ω–∏—è
        decor.style.fontSize = Math.random() * 10 + 20 + 'px'; // –†–∞–∑–º–µ—Ä—ã –æ—Ç 20 –¥–æ 30 –ø–∏–∫—Å–µ–ª–µ–π
        decor.style.opacity = Math.random() * 0.4 + 0.3; // –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ—Ç 0.3 –¥–æ 0.7
        decor.style.position = 'absolute';
        decor.style.top = '-10%'; // –ù–∞—á–∏–Ω–∞–µ–º —Å–≤–µ—Ä—Ö—É
        decor.classList.add('falling');
        container.appendChild(decor);

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        decor.addEventListener('animationend', () => {
            decor.style.left = Math.random() * 100 + 'vw';
            decor.style.animationDuration = Math.random() * 5 + 5 + 's';
        });
    }
}

// –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
initializeFallingDecor();
